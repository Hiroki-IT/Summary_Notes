# バージョン
version: 2.1

# AWS-ECRパッケージを使用．
orbs:
  aws-ecr: circleci/aws-ecr@6.9.0
  aws-ecs: circleci/aws-ecs@1.2.0

# ジョブの設定
jobs:
  push-images:
    # ホスト側環境の設定
    machine: true
    # -- Fix: CircleCIのディレクトリは，/root/project(=tech-notebook)/
    working_directory: ~/tech-notebook
    steps:
      - run:
          # -- Fix: checkoutが日本語を認識できないので対処
          name: Setup git config
          command: |
            git config --global core.quotepath false
      - checkout
      - run:
          name: Build builder
          command: |
            docker build -f infra/docker/builder/Dockerfile -t ${DOCKER_USER}/${REPOSITORY_NAME_BUILDER} .
      - run:
          name: Build www
          command: |
            docker build -f infra/docker/www/Dockerfile -t ${DOCKER_USER}/${REPOSITORY_NAME_WWW} .
      - run:
          name: Login to docker hub
          command: |
            echo ${DOCKER_PASS} |
            docker login -u ${DOCKER_USER} --password-stdin
      - run:
          name: Push builder
          command: |
            docker push ${DOCKER_USER}/${REPOSITORY_NAME_BUILDER}:${VERSION}
      - run:
          name: Push www
          command: |
            docker push ${DOCKER_USER}/${REPOSITORY_NAME_WWW}:${VERSION}

  build:
    # ホスト側環境の設定
    docker:
      - image: ${DOCKER_USER}/${REPOSITORY_NAME_BUILDER}:${VERSION}
    steps:
      - run:
          # -- Fix: checkoutが日本語を認識できないので対処
          name: Setup git config
          command: |
            git config --global core.quotepath false
      - checkout
      - run:
          # Htmlの生成
          name: Build html
          command: |
            make html
      - run:
          # 格納ディレクトリの掃除
          name: Clean up html
          command: |
            make clean

# 実行の順番を定義
workflows:
  version: 2.1
  build-push:
    jobs:
      # Docker Hub
      - push-images:
          filters:
            branches:
              only:
                # NOTE: デプロイする場合は指定のブランチを作成
                - feature/update_circleci_config
                - feature/update_dockerfile
      # AWS ECR builder -- Fix: env_var_name型とstring型の間で，変数展開の記述方法が異なる
      - aws-ecr/build-and-push-image:
          name: build-and-push-image-builder
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          dockerfile: 'infra/docker/builder/Dockerfile'
          path: '.'
          region: AWS_REGION
          repo: ${REPOSITORY_NAME_BUILDER}
          create-repo: true
          tag: ${CIRCLE_SHA1}
          requires:
            - build
      # AWS ECR www -- Fix: env_var_name型とstring型の間で，変数展開の記述方法が異なる
      - aws-ecr/build-and-push-image:
          name: build-and-push-image-www
          account-url: AWS_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_SECRET_KEY
          dockerfile: 'infra/docker/www/Dockerfile'
          path: '.'
          region: AWS_REGION
          repo: ${REPOSITORY_NAME_WWW}
          create-repo: true
          tag: ${CIRCLE_SHA1}
          requires:
            - build
      - build:
          requires:
            - push-images
      # AWS ECS builder
      - aws-ecs/deploy-service-update:
          name: deploy-service-update-builder
          cluster-name: '${APP_NAME}-cluster'
          family: '${APP_NAME}-service'
          container-image-name-updates: 'container=builder,tag=${CIRCLE_SHA1}'
          requires:
            - build-and-push-image-builder
            - build-and-push-image-www
      # AWS ECS www
      - aws-ecs/deploy-service-update:
          name: deploy-service-update-www
          cluster-name: '${APP_NAME}-cluster'
          family: '${APP_NAME}-service'
          container-image-name-updates: 'container=www,tag=${CIRCLE_SHA1}'
          requires:
            - build-and-push-image-builder
            - build-and-push-image-www
      - aws-ecs/run-task:
          cluster: '${APP_NAME}-cluster'
          awsvpc: true
          launch-type: FARGATE
          task-definition: '${APP_NAME}-task-definition'
          requires:
            - deploy-service-update-builder
            - deploy-service-update-www